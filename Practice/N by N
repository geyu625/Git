/*N*N matrix is given with input red or black. You can move horizontally, vertically or diagonally. If 3 consecutive same color 
	 * found, that color will get 1 point. So if 4 red are vertically then point is 2. Find the winner.*/
	public static int[] findWinner(char[][] board) {
		int[] result = {0, 0};
		if (board == null || (board.length < 3 && board[0].length < 3))
			return null;
		// horizontal;
		for (int i = 0; i < board.length; i++) {
			for (int j = 0; j < board[0].length - 2; j++) {
				int count = 1;
				while (j < board[0].length - 1 && board[i][j] == board[i][j + 1]) {
					count++;
					j++;
				}
				if (count == 3) {
					if (board[i][j] == 'r')
						result[0]++;
					else result[1]++;
				} 
			}
		}
		
		//vertical
		for (int j = 0; j < board[0].length; j++) {
			for (int i = 0; i < board.length - 2; i++) {
				int count = 1;
				while (i < board.length - 1 && board[i][j] == board[i + 1][j]) {
					count++;
					i++;
				}
				if (count == 3) {
					if (board[i][j] == 'r')
						result[0]++;
					else result[1]++;
				} 
				else if (count == 4) {
					if (board[i][j] == 'r')
						result[0] += 2;
					else result[1] += 2;
				}
			}
		}
		
		//diagonal;
//		for (int j = 0; j < board.length - 2; j--) {
//			int count = 1;
//			while (int i < board.length - j && board[i][j] == board[i + 1][j + 1]) {
//				count++;
//				i++;
//				j++;
//			}
//			if (count == 3) {
//				if (board[i][j] == 'r')
//					result[0]++;
//				else result[1]++;
//			} 
//		}
		
		for (int i = 0; i < board.length - 2; i++) {
			for (int j = 0; j < board[0].length - 2; j++) {
				int count = 1;
				while (i < board.length - 1 && j < board.length - 1 && board[i][j] == board[i + 1][j + 1]) {
					count++;
					i++;
					j++;
				}
				if (count == 3) {
					if (board[i][j] == 'r')
						result[0]++;
					else result[1]++;
				} 
			}
		}
		
		// botom up diagonal
		for (int i = 0; i < board.length - 2; i++) {
			for (int j = 0; j < board[0].length - 2; j++) {
				int count = 1;
				while (i < board.length - 1 && j < board.length - 1 && board[i][j] == board[i + 1][j + 1]) {
					count++;
					i++;
					j++;
				}
				if (count == 3) {
					if (board[i][j] == 'r')
						result[0]++;
					else result[1]++;
				} 
			}
		}
		for (int i = 0; i < board.length - 2; i++) {
			int count = 1;
			while (i < board.length - 1 && board[i][board.length - 1 - i] == board[i + 1][board.length - 2 - i]) {
				count++;
				i++;
			}
			if (count == 3) {
				if (board[i][board.length - 1 - i] == 'r')
					result[0]++;
				else result[1]++;
			} 
		}
		//return result[0] > result[1] ? "red" : "black";
		return result;
	}
	
